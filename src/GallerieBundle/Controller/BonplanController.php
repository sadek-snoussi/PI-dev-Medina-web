<?php

namespace GallerieBundle\Controller;

use blackknight467\StarRatingBundle\Form\RatingType;
use GallerieBundle\Form\BonplanType;
use GallerieBundle\Form\RateType;
use GallerieBundle\Form\RechBonplanType;
use GallerieBundle\Form\RechRateType;
use GallerieBundle\Form\TrieRateType;
use GallerieBundle\Form\UpdateBonplanType;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use WebServiceBundle\Entity\Bonplan;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use WebServiceBundle\Entity\RatingBonplan;

class BonplanController extends Controller
{
    public function addBonplanAction(Request $request)
    {
        $Bonplan=new Bonplan();

        $form = $this->createForm(BonplanType::class, $Bonplan);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            /**
             * @var UploadedFile $file
             */
            $user=$this->getUser();
            $Bonplan->setIdUser($this->getDoctrine()->getManager()->getRepository("UserBundle:User")->find($user));

            $file=$Bonplan->getImgBonplan();
            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

            $file->move(
                $this->getParameter('Bonplan_directory'),
                $fileName
            );

            $Bonplan->setImgBonplan($fileName);
            $em = $this->getDoctrine()->getManager();



            $em->persist($Bonplan,$form->getData());
            $em->flush();

            $session = $this->get('session');
            $session->getFlashBag()->add('success', 'Bon Plan ajouté avec succée.');

            return $this->redirectToRoute("Affiche_Bonplan");

        }

        return $this->render('GallerieBundle:Admin:AjoutBonplan.html.twig', array(
            'form' => $form->createView(),
        ));
    }






    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }





    public function showBonplanAction() {
        $em = $this->getDoctrine()->getManager();
        $Bonplan = $em->getRepository("WebServiceBundle:Bonplan")->findAll();
        return $this->render('GallerieBundle:Admin:AfficheBonplan.html.twig', array(
            'Bonplan'=> $Bonplan));
    }

    public function GeoindexAction($id,Request $request)
    {
        $em=$this->getDoctrine()->getManager();
        $bonplan=$em->getRepository('WebServiceBundle:Bonplan')->find($id);

        $adresse=$bonplan->getAdressebonplan();
        $Latitudes = $bonplan->getLatitude();
        $Longitudes = $bonplan->getLongitude();
        $Img = $bonplan->getImgbonplan();
        $titre= $bonplan->getNombonplan();



        /**************************/
        $newRating= new RatingBonplan();
        $user=$this->getUser();
       $newRating->setIdUser($this->getDoctrine()->getManager()->getRepository("WebServiceBundle:User")->find($user));

       // $newRating->setIdUser();
        $newRating->setIdBonplan($bonplan);
        $retrievedRatingResult=$em->getRepository("WebServiceBundle:RatingBonplan")->findOneBy(array('idBonplan'=>$bonplan,'idUser'=>$user));


        if ( $retrievedRatingResult != null)
        {
            $ratingform = $this->createForm(RateType::class, $retrievedRatingResult);
            $ratingform->handleRequest($request);
            if ($ratingform->isSubmitted()) {
                $retrievedRatingResult->setRatingValue($ratingform->get('ratingValue')->getData());

                $em->persist($retrievedRatingResult);
                $em->flush();
            }
        }else
        {
            $ratingform= $this->createForm(RateType::class, $newRating);
            $ratingform->handleRequest($request);
            if ($ratingform->isSubmitted()) {
                $newRating->setRatingValue($ratingform->get('ratingValue')->getData());
                $em->persist($newRating);
                $em->flush();
            }

        }

        $bonplan->setAvgrating($em->getRepository("WebServiceBundle:RatingBonplan")->averageRatingDQL($id));
        $em->persist($bonplan);
        $em->flush();
        /****************************/


        return $this->render('@Gallerie/Client/geolocalisation/Geoindex.html.twig',
            array('Latitudes' => $Latitudes,
                'Longitudes' =>$Longitudes,
                'Adress'=>$adresse ,
                'retrievedRatingResult'=>$retrievedRatingResult,
                'ratingform' => $ratingform->createView(),
                'Img'=>$Img,
                'titre'=>$titre));
    }


    public function showClientBonplanAction(Request $request) {


        $em = $this->getDoctrine()->getManager();

       // $ListBonplan = $em->getRepository("WebServiceBundle:Bonplan")->findAll();
        $ListBonplan="select p from WebServiceBundle:Bonplan p ";
        $query=$em->createQuery($ListBonplan);

        $paginator  = $this->get('knp_paginator');
        $result = $paginator->paginate(
            $query,
            $request->query->getInt('page',1),
            $request->query->getInt('limit',5)
        );




       $Bonplan = new Bonplan();

        $form= $this->createForm(RechBonplanType::class,$Bonplan);
        $form->handleRequest($request);
        $form2 = $this->createForm(RechRateType::class, $Bonplan);
        $form2->handleRequest($request);
        $form3 = $this->createForm(TrieRateType::class, $Bonplan);
        $form3->handleRequest($request);

        if($form->isValid())
        {

           //$ListBonplan = $em->getRepository("WebServiceBundle:Bonplan")->findTypeBonPlan($form->get('typebonplan')->getData());
            $userAvis=$form->get('typebonplan')->getData();
            $ListBonplan="select lbp from WebServiceBundle:Bonplan lbp WHERE lbp.typebonplan = :typebonplan";
            $query=$em->createQuery($ListBonplan)->setParameter('typebonplan',$userAvis);

            $paginator  = $this->get('knp_paginator');
            $result = $paginator   ->paginate(
                $query,
                $request->query->getInt('page',1),
                $request->query->getInt('limit',3)
            );

        }
        elseif ($form2->isValid())
        {
            $userAvis=$form2->get('AvgRating')->getData();
            $ListBonplan="select lbp from WebServiceBundle:Bonplan lbp WHERE lbp.avgrating = :avisvalue";
            $query=$em->createQuery($ListBonplan)->setParameter('avisvalue',$userAvis);


            $paginator  = $this->get('knp_paginator');
            $result = $paginator   ->paginate(
                $query,
                $request->query->getInt('page',1),
                $request->query->getInt('limit',3)
            );
        }
        elseif ($form3->isValid())
        {
                if( $form3->get('AvgRating')->getData()=='Asc')
                {

                    //$ListBonplan = $em->getRepository("UserBundle:Bonplan")->findratingDesc();

                    $x = $this->get('knp_paginator')->paginate(
                        $ListBonplan,
                        $request->query->get('page', 1)/*page number*/,
                        $request->query->getInt('limit',3)

                    );

                }else
                {
                    //$ListBonplan = $em->getRepository("UserBundle:Bonplan")->findratingasc();

                    $x = $this->get('knp_paginator')->paginate(
                        $ListBonplan,
                        $request->query->get('page', 1)/*page number*/,
                        $request->query->getInt('limit',3)
                    );
                }
        }

        return $this->render('GallerieBundle:Client:Bonplan.html.twig', array(
            'ListBonplan'=> $form ->createView(),
            'ListBonplan1'=> $form2 ->createView(),
            'ListBonplan2'=> $form3 ->createView(),
            'LBP1'=> $ListBonplan,

            'BP_list'=>$result,
    ));
    }






    public function deleteBonplanAction($id)
    {
        $em = $this->getDoctrine()->getManager();
        $Bonplan = $em->getRepository("WebServiceBundle:Bonplan")->find($id);

        $em->remove($Bonplan);
        $em->flush();

        $session = $this->get('session');
        $session->getFlashBag()->add('success', 'Bon Plan supprimé avec succée.');

        return $this->redirectToRoute("Affiche_Bonplan");
    }


    public function updateBonplanAction($id, Request $request)
    {
        $em=$this->getDoctrine()->getManager();
        $Bonplan=$em->getRepository("WebServiceBundle:Bonplan")->find($id);



        $Form= $this->createForm(UpdateBonplanType::class, $Bonplan);
        $Form->handleRequest($request);

        if ($Form->isSubmitted()){
            $em=$this->getDoctrine()->getManager();
            $em->persist($Bonplan);
            $em->flush();

            $session = $this->get('session');
            $session->getFlashBag()->add('success', 'Bon Plan edité avec succée.');

            return $this->redirectToRoute('Affiche_Bonplan');
        }
        return $this->render("GallerieBundle:Admin:UpdateBonplan.html.twig", array('form' => $Form->createView()));

    }

    public function ajout_NoteAction( $id_user, $id_bonplan, $rating)
    {
        $Rating= new RatingBonplan();
        $em = $this->getDoctrine()->getManager();


        $Rating->setRatingValue($rating);
        $Rating->setIdUser($em->getRepository("WebServiceBundle:User")->find($id_user));
        $Rating->setIdBonplan($em->getRepository("WebServiceBundle:Bonplan")->find($id_bonplan));

        $em->persist($Rating);
        $em->flush();

        $Ratings = $em->getRepository(RatingBonplan::class)->findBy(array("idBonplan"=>$id_bonplan));

        $som = 0;

        foreach ($Ratings as $rat){
            $som =$som + $rat->getRatingValue();
        }

        $avg = $som / count($Ratings);

        $Bonplan = $em->getRepository(Bonplan::class)->find($id_bonplan);
        $Bonplan->setAvgrating($avg);
        $em->flush();

        return "succes";
    }


}
